plugins {
    id 'application'
    id 'com.google.protobuf' version '0.8.13'
    id 'idea'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def grpcVersion = '1.32.1' 
def protobufVersion = '3.12.0'
def protocVersion = protobufVersion
def reactiveGrpcVersion = "1.0.1"

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
        rxgrpc { artifact = "com.salesforce.servicelibs:rxgrpc:${reactiveGrpcVersion}" }
        reactor { artifact = "com.salesforce.servicelibs:reactor-grpc:${reactiveGrpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
            rxgrpc {}
            reactor {}}
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}


dependencies {
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"

    implementation "com.salesforce.servicelibs:reactive-grpc:${reactiveGrpcVersion}"
    implementation "com.salesforce.servicelibs:rxgrpc-stub:${reactiveGrpcVersion}"
    implementation "com.salesforce.servicelibs:reactor-grpc-stub:${reactiveGrpcVersion}"
    implementation "io.reactivex.rxjava2:rxjava:2.2.10"

    compileOnly "org.apache.tomcat:annotations-api:6.0.53"
    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}" //todo needed?

    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testImplementation "junit:junit:4.12"
    testImplementation "org.mockito:mockito-core:2.28.2"
}

startScripts.enabled = false

task grpcServer(type: CreateStartScripts) {
    mainClassName = 'io.zebless.grpcserver.GrpcServer'
    applicationName = 'grpc-server'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}


applicationDistribution.into('bin') {
    from(grpcServer)
    fileMode = 0755
}
